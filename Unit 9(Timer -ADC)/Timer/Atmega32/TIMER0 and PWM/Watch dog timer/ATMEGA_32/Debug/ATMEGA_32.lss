
ATMEGA_32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000044e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cdb  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007dd  00000000  00000000  000012cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000792  00000000  00000000  00001aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000228  00000000  00000000  0000223c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000488  00000000  00000000  00002464  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000775  00000000  00000000  000028ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003061  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__vector_1>
   8:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_2>
   c:	0c 94 bb 01 	jmp	0x376	; 0x376 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e4       	ldi	r30, 0x4E	; 78
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 25 02 	jmp	0x44a	; 0x44a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:




int main() {
	MCAL_DIO_PIN_Dir( DIO_PORTA , PA0, DIO_pin_OUT);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	0e 94 79 00 	call	0xf2	; 0xf2 <MCAL_DIO_PIN_Dir>
	MCAL_DIO_PIN_Dir( DIO_PORTA , PA1, DIO_pin_OUT);
  9c:	41 e0       	ldi	r20, 0x01	; 1
  9e:	61 e0       	ldi	r22, 0x01	; 1
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	0e 94 79 00 	call	0xf2	; 0xf2 <MCAL_DIO_PIN_Dir>
	MCAL_DIO_PIN_val (DIO_PORTA , PA0 ,DIO_pin_HIGH);
  a6:	41 e0       	ldi	r20, 0x01	; 1
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	2f e1       	ldi	r18, 0x1F	; 31
  b2:	8f eb       	ldi	r24, 0xBF	; 191
  b4:	92 e0       	ldi	r25, 0x02	; 2
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x24>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x2e>
  c0:	00 00       	nop
	_delay_ms(900);
	MCAL_DIO_PIN_val (DIO_PORTA , PA0 ,DIO_pin_LOW);
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
	
	
while(1)
{
		MCAL_watch_dog_timer_start(WDT_2100_ms);
  cc:	87 e0       	ldi	r24, 0x07	; 7
  ce:	0e 94 1c 02 	call	0x438	; 0x438 <MCAL_watch_dog_timer_start>
		MCAL_DIO_PIN_toggle (DIO_PORTA , PA1 );
  d2:	61 e0       	ldi	r22, 0x01	; 1
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MCAL_DIO_PIN_toggle>
  da:	2f e7       	ldi	r18, 0x7F	; 127
  dc:	84 e8       	ldi	r24, 0x84	; 132
  de:	9e e1       	ldi	r25, 0x1E	; 30
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x4e>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x58>
  ea:	00 00       	nop
		_delay_ms(10000);
	    MCAL_watch_dog_timer_stop();	
  ec:	0e 94 21 02 	call	0x442	; 0x442 <MCAL_watch_dog_timer_stop>
  f0:	ed cf       	rjmp	.-38     	; 0xcc <main+0x3a>

000000f2 <MCAL_DIO_PIN_Dir>:
	}
	
}
void MCAL_DIO_PIN_Dir(uint8_t port_num, uint8_t pin_num, uint8_t dir)
{
switch(dir)
  f2:	44 23       	and	r20, r20
  f4:	b9 f1       	breq	.+110    	; 0x164 <MCAL_DIO_PIN_Dir+0x72>
  f6:	41 30       	cpi	r20, 0x01	; 1
  f8:	09 f0       	breq	.+2      	; 0xfc <MCAL_DIO_PIN_Dir+0xa>
  fa:	6b c0       	rjmp	.+214    	; 0x1d2 <MCAL_DIO_PIN_Dir+0xe0>
{
case DIO_pin_OUT:
     switch(port_num)
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	89 f0       	breq	.+34     	; 0x122 <MCAL_DIO_PIN_Dir+0x30>
 100:	28 f0       	brcs	.+10     	; 0x10c <MCAL_DIO_PIN_Dir+0x1a>
 102:	82 30       	cpi	r24, 0x02	; 2
 104:	c9 f0       	breq	.+50     	; 0x138 <MCAL_DIO_PIN_Dir+0x46>
 106:	83 30       	cpi	r24, 0x03	; 3
 108:	11 f1       	breq	.+68     	; 0x14e <MCAL_DIO_PIN_Dir+0x5c>
 10a:	08 95       	ret
	 {
		 case DIO_PORTA: SET_BIT(DDRA ,pin_num); break;
 10c:	2a b3       	in	r18, 0x1a	; 26
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <MCAL_DIO_PIN_Dir+0x26>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <MCAL_DIO_PIN_Dir+0x22>
 11c:	82 2b       	or	r24, r18
 11e:	8a bb       	out	0x1a, r24	; 26
 120:	08 95       	ret
         case DIO_PORTB: SET_BIT(DDRB ,pin_num); break;
 122:	27 b3       	in	r18, 0x17	; 23
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <MCAL_DIO_PIN_Dir+0x3c>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <MCAL_DIO_PIN_Dir+0x38>
 132:	82 2b       	or	r24, r18
 134:	87 bb       	out	0x17, r24	; 23
 136:	08 95       	ret
         case DIO_PORTC: SET_BIT(DDRC ,pin_num); break;
 138:	24 b3       	in	r18, 0x14	; 20
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <MCAL_DIO_PIN_Dir+0x52>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <MCAL_DIO_PIN_Dir+0x4e>
 148:	82 2b       	or	r24, r18
 14a:	84 bb       	out	0x14, r24	; 20
 14c:	08 95       	ret
         case DIO_PORTD: SET_BIT(DDRD ,pin_num); break;	 
 14e:	21 b3       	in	r18, 0x11	; 17
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <MCAL_DIO_PIN_Dir+0x68>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <MCAL_DIO_PIN_Dir+0x64>
 15e:	82 2b       	or	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret
	 }
	 break;
case DIO_pin_INT:
     switch(port_num)
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	91 f0       	breq	.+36     	; 0x18c <MCAL_DIO_PIN_Dir+0x9a>
 168:	28 f0       	brcs	.+10     	; 0x174 <MCAL_DIO_PIN_Dir+0x82>
 16a:	82 30       	cpi	r24, 0x02	; 2
 16c:	d9 f0       	breq	.+54     	; 0x1a4 <MCAL_DIO_PIN_Dir+0xb2>
 16e:	83 30       	cpi	r24, 0x03	; 3
 170:	29 f1       	breq	.+74     	; 0x1bc <MCAL_DIO_PIN_Dir+0xca>
 172:	08 95       	ret
     {
	     case DIO_PORTA: CLR_BIT(DDRA ,pin_num); break;
 174:	2a b3       	in	r18, 0x1a	; 26
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <MCAL_DIO_PIN_Dir+0x8e>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <MCAL_DIO_PIN_Dir+0x8a>
 184:	80 95       	com	r24
 186:	82 23       	and	r24, r18
 188:	8a bb       	out	0x1a, r24	; 26
 18a:	08 95       	ret
	     case DIO_PORTB: CLR_BIT(DDRB ,pin_num); break;
 18c:	27 b3       	in	r18, 0x17	; 23
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <MCAL_DIO_PIN_Dir+0xa6>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <MCAL_DIO_PIN_Dir+0xa2>
 19c:	80 95       	com	r24
 19e:	82 23       	and	r24, r18
 1a0:	87 bb       	out	0x17, r24	; 23
 1a2:	08 95       	ret
	     case DIO_PORTC: CLR_BIT(DDRC ,pin_num); break;
 1a4:	24 b3       	in	r18, 0x14	; 20
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <MCAL_DIO_PIN_Dir+0xbe>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <MCAL_DIO_PIN_Dir+0xba>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	84 bb       	out	0x14, r24	; 20
 1ba:	08 95       	ret
	     case DIO_PORTD: CLR_BIT(DDRD ,pin_num); break;     
 1bc:	21 b3       	in	r18, 0x11	; 17
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <MCAL_DIO_PIN_Dir+0xd6>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <MCAL_DIO_PIN_Dir+0xd2>
 1cc:	80 95       	com	r24
 1ce:	82 23       	and	r24, r18
 1d0:	81 bb       	out	0x11, r24	; 17
 1d2:	08 95       	ret

000001d4 <MCAL_DIO_PIN_val>:
	 break;
}
}
void MCAL_DIO_PIN_val(uint8_t port_num, uint8_t pin_num, uint8_t val)
{
switch(val)
 1d4:	44 23       	and	r20, r20
 1d6:	b9 f1       	breq	.+110    	; 0x246 <MCAL_DIO_PIN_val+0x72>
 1d8:	41 30       	cpi	r20, 0x01	; 1
 1da:	09 f0       	breq	.+2      	; 0x1de <MCAL_DIO_PIN_val+0xa>
 1dc:	6b c0       	rjmp	.+214    	; 0x2b4 <MCAL_DIO_PIN_val+0xe0>
{
	case DIO_pin_HIGH :
	switch(port_num)
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	89 f0       	breq	.+34     	; 0x204 <MCAL_DIO_PIN_val+0x30>
 1e2:	28 f0       	brcs	.+10     	; 0x1ee <MCAL_DIO_PIN_val+0x1a>
 1e4:	82 30       	cpi	r24, 0x02	; 2
 1e6:	c9 f0       	breq	.+50     	; 0x21a <MCAL_DIO_PIN_val+0x46>
 1e8:	83 30       	cpi	r24, 0x03	; 3
 1ea:	11 f1       	breq	.+68     	; 0x230 <MCAL_DIO_PIN_val+0x5c>
 1ec:	08 95       	ret
	{
		case DIO_PORTA: SET_BIT(PORTA ,pin_num); break;
 1ee:	2b b3       	in	r18, 0x1b	; 27
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <MCAL_DIO_PIN_val+0x26>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <MCAL_DIO_PIN_val+0x22>
 1fe:	82 2b       	or	r24, r18
 200:	8b bb       	out	0x1b, r24	; 27
 202:	08 95       	ret
		case DIO_PORTB: SET_BIT(PORTB ,pin_num); break;
 204:	28 b3       	in	r18, 0x18	; 24
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <MCAL_DIO_PIN_val+0x3c>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <MCAL_DIO_PIN_val+0x38>
 214:	82 2b       	or	r24, r18
 216:	88 bb       	out	0x18, r24	; 24
 218:	08 95       	ret
		case DIO_PORTC: SET_BIT(PORTC ,pin_num); break;
 21a:	25 b3       	in	r18, 0x15	; 21
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <MCAL_DIO_PIN_val+0x52>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <MCAL_DIO_PIN_val+0x4e>
 22a:	82 2b       	or	r24, r18
 22c:	85 bb       	out	0x15, r24	; 21
 22e:	08 95       	ret
		case DIO_PORTD: SET_BIT(PORTD ,pin_num); break;
 230:	22 b3       	in	r18, 0x12	; 18
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <MCAL_DIO_PIN_val+0x68>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <MCAL_DIO_PIN_val+0x64>
 240:	82 2b       	or	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret
	}
	break;
	case DIO_pin_LOW:	
	switch(port_num)
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	91 f0       	breq	.+36     	; 0x26e <MCAL_DIO_PIN_val+0x9a>
 24a:	28 f0       	brcs	.+10     	; 0x256 <MCAL_DIO_PIN_val+0x82>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	d9 f0       	breq	.+54     	; 0x286 <MCAL_DIO_PIN_val+0xb2>
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	29 f1       	breq	.+74     	; 0x29e <MCAL_DIO_PIN_val+0xca>
 254:	08 95       	ret
	{
		case DIO_PORTA: CLR_BIT(PORTA ,pin_num); break;
 256:	2b b3       	in	r18, 0x1b	; 27
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <MCAL_DIO_PIN_val+0x8e>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <MCAL_DIO_PIN_val+0x8a>
 266:	80 95       	com	r24
 268:	82 23       	and	r24, r18
 26a:	8b bb       	out	0x1b, r24	; 27
 26c:	08 95       	ret
		case DIO_PORTB: CLR_BIT(PORTB ,pin_num); break;
 26e:	28 b3       	in	r18, 0x18	; 24
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <MCAL_DIO_PIN_val+0xa6>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <MCAL_DIO_PIN_val+0xa2>
 27e:	80 95       	com	r24
 280:	82 23       	and	r24, r18
 282:	88 bb       	out	0x18, r24	; 24
 284:	08 95       	ret
		case DIO_PORTC: CLR_BIT(PORTC ,pin_num); break;
 286:	25 b3       	in	r18, 0x15	; 21
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <MCAL_DIO_PIN_val+0xbe>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <MCAL_DIO_PIN_val+0xba>
 296:	80 95       	com	r24
 298:	82 23       	and	r24, r18
 29a:	85 bb       	out	0x15, r24	; 21
 29c:	08 95       	ret
		case DIO_PORTD: CLR_BIT(PORTD ,pin_num); break;
 29e:	22 b3       	in	r18, 0x12	; 18
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <MCAL_DIO_PIN_val+0xd6>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	6a 95       	dec	r22
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <MCAL_DIO_PIN_val+0xd2>
 2ae:	80 95       	com	r24
 2b0:	82 23       	and	r24, r18
 2b2:	82 bb       	out	0x12, r24	; 18
 2b4:	08 95       	ret

000002b6 <MCAL_DIO_PIN_toggle>:
	break;
}
}
void MCAL_DIO_PIN_toggle(uint8_t port_num, uint8_t pin_num)
{
switch(port_num)
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	89 f0       	breq	.+34     	; 0x2dc <MCAL_DIO_PIN_toggle+0x26>
 2ba:	28 f0       	brcs	.+10     	; 0x2c6 <MCAL_DIO_PIN_toggle+0x10>
 2bc:	82 30       	cpi	r24, 0x02	; 2
 2be:	c9 f0       	breq	.+50     	; 0x2f2 <MCAL_DIO_PIN_toggle+0x3c>
 2c0:	83 30       	cpi	r24, 0x03	; 3
 2c2:	11 f1       	breq	.+68     	; 0x308 <MCAL_DIO_PIN_toggle+0x52>
 2c4:	08 95       	ret
{
	case DIO_PORTA : TOG_BIT(PORTA,pin_num); break;
 2c6:	2b b3       	in	r18, 0x1b	; 27
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <MCAL_DIO_PIN_toggle+0x1c>
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <MCAL_DIO_PIN_toggle+0x18>
 2d6:	82 27       	eor	r24, r18
 2d8:	8b bb       	out	0x1b, r24	; 27
 2da:	08 95       	ret
	case DIO_PORTB : TOG_BIT(PORTB,pin_num); break;
 2dc:	28 b3       	in	r18, 0x18	; 24
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <MCAL_DIO_PIN_toggle+0x32>
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	6a 95       	dec	r22
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <MCAL_DIO_PIN_toggle+0x2e>
 2ec:	82 27       	eor	r24, r18
 2ee:	88 bb       	out	0x18, r24	; 24
 2f0:	08 95       	ret
	case DIO_PORTC : TOG_BIT(PORTC,pin_num); break;
 2f2:	25 b3       	in	r18, 0x15	; 21
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <MCAL_DIO_PIN_toggle+0x48>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <MCAL_DIO_PIN_toggle+0x44>
 302:	82 27       	eor	r24, r18
 304:	85 bb       	out	0x15, r24	; 21
 306:	08 95       	ret
	case DIO_PORTD : TOG_BIT(PORTD,pin_num); break;
 308:	22 b3       	in	r18, 0x12	; 18
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	02 c0       	rjmp	.+4      	; 0x314 <MCAL_DIO_PIN_toggle+0x5e>
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	6a 95       	dec	r22
 316:	e2 f7       	brpl	.-8      	; 0x310 <MCAL_DIO_PIN_toggle+0x5a>
 318:	82 27       	eor	r24, r18
 31a:	82 bb       	out	0x12, r24	; 18
 31c:	08 95       	ret

0000031e <__vector_1>:
}


//ISR
ISR(INT0_vect)
{
 31e:	1f 92       	push	r1
 320:	0f 92       	push	r0
 322:	0f b6       	in	r0, 0x3f	; 63
 324:	0f 92       	push	r0
 326:	11 24       	eor	r1, r1
 328:	2f 93       	push	r18
 32a:	3f 93       	push	r19
 32c:	4f 93       	push	r20
 32e:	5f 93       	push	r21
 330:	6f 93       	push	r22
 332:	7f 93       	push	r23
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
 338:	af 93       	push	r26
 33a:	bf 93       	push	r27
 33c:	ef 93       	push	r30
 33e:	ff 93       	push	r31
	 MCAL_DIO_PIN_Dir(DIO_PORTA,PA4,DIO_PORT_OUT);
 340:	4f ef       	ldi	r20, 0xFF	; 255
 342:	64 e0       	ldi	r22, 0x04	; 4
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	0e 94 79 00 	call	0xf2	; 0xf2 <MCAL_DIO_PIN_Dir>
	 MCAL_DIO_PIN_val(DIO_PORTA,PA4,DIO_pin_HIGH);
 34a:	41 e0       	ldi	r20, 0x01	; 1
 34c:	64 e0       	ldi	r22, 0x04	; 4
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
}
 354:	ff 91       	pop	r31
 356:	ef 91       	pop	r30
 358:	bf 91       	pop	r27
 35a:	af 91       	pop	r26
 35c:	9f 91       	pop	r25
 35e:	8f 91       	pop	r24
 360:	7f 91       	pop	r23
 362:	6f 91       	pop	r22
 364:	5f 91       	pop	r21
 366:	4f 91       	pop	r20
 368:	3f 91       	pop	r19
 36a:	2f 91       	pop	r18
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <__vector_3>:

ISR(INT2_vect)
{
 376:	1f 92       	push	r1
 378:	0f 92       	push	r0
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	0f 92       	push	r0
 37e:	11 24       	eor	r1, r1
 380:	2f 93       	push	r18
 382:	3f 93       	push	r19
 384:	4f 93       	push	r20
 386:	5f 93       	push	r21
 388:	6f 93       	push	r22
 38a:	7f 93       	push	r23
 38c:	8f 93       	push	r24
 38e:	9f 93       	push	r25
 390:	af 93       	push	r26
 392:	bf 93       	push	r27
 394:	ef 93       	push	r30
 396:	ff 93       	push	r31
   MCAL_DIO_PIN_val(DIO_PORTA,PA4,DIO_pin_LOW);
 398:	40 e0       	ldi	r20, 0x00	; 0
 39a:	64 e0       	ldi	r22, 0x04	; 4
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
 3a2:	2f e9       	ldi	r18, 0x9F	; 159
 3a4:	86 e8       	ldi	r24, 0x86	; 134
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	21 50       	subi	r18, 0x01	; 1
 3aa:	80 40       	sbci	r24, 0x00	; 0
 3ac:	90 40       	sbci	r25, 0x00	; 0
 3ae:	e1 f7       	brne	.-8      	; 0x3a8 <__vector_3+0x32>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <__vector_3+0x3c>
 3b2:	00 00       	nop
   _delay_ms(500);
    MCAL_DIO_PIN_val(DIO_PORTA,PA3,DIO_pin_LOW);
 3b4:	40 e0       	ldi	r20, 0x00	; 0
 3b6:	63 e0       	ldi	r22, 0x03	; 3
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
}
 3be:	ff 91       	pop	r31
 3c0:	ef 91       	pop	r30
 3c2:	bf 91       	pop	r27
 3c4:	af 91       	pop	r26
 3c6:	9f 91       	pop	r25
 3c8:	8f 91       	pop	r24
 3ca:	7f 91       	pop	r23
 3cc:	6f 91       	pop	r22
 3ce:	5f 91       	pop	r21
 3d0:	4f 91       	pop	r20
 3d2:	3f 91       	pop	r19
 3d4:	2f 91       	pop	r18
 3d6:	0f 90       	pop	r0
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	0f 90       	pop	r0
 3dc:	1f 90       	pop	r1
 3de:	18 95       	reti

000003e0 <__vector_2>:
ISR(INT1_vect)
{
 3e0:	1f 92       	push	r1
 3e2:	0f 92       	push	r0
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	0f 92       	push	r0
 3e8:	11 24       	eor	r1, r1
 3ea:	2f 93       	push	r18
 3ec:	3f 93       	push	r19
 3ee:	4f 93       	push	r20
 3f0:	5f 93       	push	r21
 3f2:	6f 93       	push	r22
 3f4:	7f 93       	push	r23
 3f6:	8f 93       	push	r24
 3f8:	9f 93       	push	r25
 3fa:	af 93       	push	r26
 3fc:	bf 93       	push	r27
 3fe:	ef 93       	push	r30
 400:	ff 93       	push	r31
   MCAL_DIO_PIN_Dir(DIO_PORTA,PA3,DIO_PORT_OUT);
 402:	4f ef       	ldi	r20, 0xFF	; 255
 404:	63 e0       	ldi	r22, 0x03	; 3
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	0e 94 79 00 	call	0xf2	; 0xf2 <MCAL_DIO_PIN_Dir>
   MCAL_DIO_PIN_val(DIO_PORTA,PA3,DIO_pin_HIGH);
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	63 e0       	ldi	r22, 0x03	; 3
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MCAL_DIO_PIN_val>
}
 416:	ff 91       	pop	r31
 418:	ef 91       	pop	r30
 41a:	bf 91       	pop	r27
 41c:	af 91       	pop	r26
 41e:	9f 91       	pop	r25
 420:	8f 91       	pop	r24
 422:	7f 91       	pop	r23
 424:	6f 91       	pop	r22
 426:	5f 91       	pop	r21
 428:	4f 91       	pop	r20
 42a:	3f 91       	pop	r19
 42c:	2f 91       	pop	r18
 42e:	0f 90       	pop	r0
 430:	0f be       	out	0x3f, r0	; 63
 432:	0f 90       	pop	r0
 434:	1f 90       	pop	r1
 436:	18 95       	reti

00000438 <MCAL_watch_dog_timer_start>:
#include "watch_dog_timer.h"

void MCAL_watch_dog_timer_start(uint8_t time_out)
{
 	 //set prescaler
    WDTCR = time_out;
 438:	81 bd       	out	0x21, r24	; 33
	//enable Watch dog timer
     WDTCR |=(1<<WDE);
 43a:	81 b5       	in	r24, 0x21	; 33
 43c:	88 60       	ori	r24, 0x08	; 8
 43e:	81 bd       	out	0x21, r24	; 33
 440:	08 95       	ret

00000442 <MCAL_watch_dog_timer_stop>:
	//To disable an enabled Watchdog Timer, the following procedure must be
	//followed:
	//1. In the same operation, write a logic one to WDTOE and WDE. 
	//A logic one must be written to WDE even though it is set to one before the disable operation starts
	//2. Within the next four clock cycles, write a logic 0 to WDE. This disables the Watchdog.
    WDTCR =((1<<WDE)|(1<<WDTOE));
 442:	88 e1       	ldi	r24, 0x18	; 24
 444:	81 bd       	out	0x21, r24	; 33
	WDTCR =0x00;	
 446:	11 bc       	out	0x21, r1	; 33
 448:	08 95       	ret

0000044a <_exit>:
 44a:	f8 94       	cli

0000044c <__stop_program>:
 44c:	ff cf       	rjmp	.-2      	; 0x44c <__stop_program>
