
Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004a0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005d0  080005d8  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005d0  080005d0  000105d8  2**0
                  CONTENTS
  4 .ARM          00000000  080005d0  080005d0  000105d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005d0  080005d8  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005d0  080005d0  000105d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005d4  080005d4  000105d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005d8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005d8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000105d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001a9a  00000000  00000000  00010601  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000483  00000000  00000000  0001209b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000044c  00000000  00000000  0001251e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00012970  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00012a30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001bc2  00000000  00000000  00012ac8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000010cf  00000000  00000000  0001468a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007a5f  00000000  00000000  00015759  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001d1b8  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000023c  00000000  00000000  0001d20c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080005b8 	.word	0x080005b8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080005b8 	.word	0x080005b8

08000170 <clock_init>:
#include "stm32f103c6_ gpio_drivers.h"
#define F_CPU 8000000UL


void clock_init()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	//Enable Init Clock GPIOA
	GPIOA_clock_enable();
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <clock_init+0x24>)
 8000176:	699b      	ldr	r3, [r3, #24]
 8000178:	4a06      	ldr	r2, [pc, #24]	; (8000194 <clock_init+0x24>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6193      	str	r3, [r2, #24]

	//Enable Init Clock GPIOB
	GPIOB_clock_enable();
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <clock_init+0x24>)
 8000182:	699b      	ldr	r3, [r3, #24]
 8000184:	4a03      	ldr	r2, [pc, #12]	; (8000194 <clock_init+0x24>)
 8000186:	f043 0308 	orr.w	r3, r3, #8
 800018a:	6193      	str	r3, [r2, #24]

}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40021000 	.word	0x40021000

08000198 <GPIO_init>:

void GPIO_init()
{
 8000198:	b580      	push	{r7, lr}
 800019a:	b082      	sub	sp, #8
 800019c:	af00      	add	r7, sp, #0
//PIN 1 PORT A
GPIO_pinconfig_t pincfg;
pincfg.gpio_pin_number =GPIO_PIN_1;
 800019e:	2302      	movs	r3, #2
 80001a0:	80bb      	strh	r3, [r7, #4]
pincfg.GPIO_MODE=GPIO_MODE_INPUT_FLO ;
 80001a2:	2301      	movs	r3, #1
 80001a4:	71bb      	strb	r3, [r7, #6]
MCAL_GPIO_INIT(GPIOA, &pincfg);
 80001a6:	1d3b      	adds	r3, r7, #4
 80001a8:	4619      	mov	r1, r3
 80001aa:	4814      	ldr	r0, [pc, #80]	; (80001fc <GPIO_init+0x64>)
 80001ac:	f000 f938 	bl	8000420 <MCAL_GPIO_INIT>

//PIN 1 PORT B
pincfg.gpio_pin_number =GPIO_PIN_1;
 80001b0:	2302      	movs	r3, #2
 80001b2:	80bb      	strh	r3, [r7, #4]
pincfg.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 80001b4:	2304      	movs	r3, #4
 80001b6:	71bb      	strb	r3, [r7, #6]
pincfg.GPIO_OUTPUT_SPEED=GPIO_SPEED_10MHZ;
 80001b8:	2301      	movs	r3, #1
 80001ba:	71fb      	strb	r3, [r7, #7]
MCAL_GPIO_INIT(GPIOB, &pincfg);
 80001bc:	1d3b      	adds	r3, r7, #4
 80001be:	4619      	mov	r1, r3
 80001c0:	480f      	ldr	r0, [pc, #60]	; (8000200 <GPIO_init+0x68>)
 80001c2:	f000 f92d 	bl	8000420 <MCAL_GPIO_INIT>

//PIN 13 PORT A
pincfg.gpio_pin_number =GPIO_PIN_13;
 80001c6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80001ca:	80bb      	strh	r3, [r7, #4]
pincfg.GPIO_MODE=GPIO_MODE_INPUT_FLO;
 80001cc:	2301      	movs	r3, #1
 80001ce:	71bb      	strb	r3, [r7, #6]
MCAL_GPIO_INIT(GPIOA, &pincfg);
 80001d0:	1d3b      	adds	r3, r7, #4
 80001d2:	4619      	mov	r1, r3
 80001d4:	4809      	ldr	r0, [pc, #36]	; (80001fc <GPIO_init+0x64>)
 80001d6:	f000 f923 	bl	8000420 <MCAL_GPIO_INIT>

//PIN 13 PORT B
pincfg.gpio_pin_number =GPIO_PIN_13;
 80001da:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80001de:	80bb      	strh	r3, [r7, #4]
pincfg.GPIO_MODE=GPIO_MODE_OUTPUT_PP ;
 80001e0:	2304      	movs	r3, #4
 80001e2:	71bb      	strb	r3, [r7, #6]
pincfg.GPIO_OUTPUT_SPEED=GPIO_SPEED_10MHZ;
 80001e4:	2301      	movs	r3, #1
 80001e6:	71fb      	strb	r3, [r7, #7]
MCAL_GPIO_INIT(GPIOB, &pincfg);
 80001e8:	1d3b      	adds	r3, r7, #4
 80001ea:	4619      	mov	r1, r3
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <GPIO_init+0x68>)
 80001ee:	f000 f917 	bl	8000420 <MCAL_GPIO_INIT>

}
 80001f2:	bf00      	nop
 80001f4:	3708      	adds	r7, #8
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bd80      	pop	{r7, pc}
 80001fa:	bf00      	nop
 80001fc:	40010800 	.word	0x40010800
 8000200:	40010c00 	.word	0x40010c00

08000204 <main>:
	for(j=0;j<255;j++);

}

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	clock_init();
 8000208:	f7ff ffb2 	bl	8000170 <clock_init>
	GPIO_init();
 800020c:	f7ff ffc4 	bl	8000198 <GPIO_init>
	while(1)
	{
	    // PA1 Button (Pull-up) >> Toggle LED on Single Press
	    if ((MCAL_GPIO_Read_pin(GPIOA, GPIO_PIN_1)==0 )) // Button A1 is pressed
 8000210:	2102      	movs	r1, #2
 8000212:	4810      	ldr	r0, [pc, #64]	; (8000254 <main+0x50>)
 8000214:	f000 f983 	bl	800051e <MCAL_GPIO_Read_pin>
 8000218:	4603      	mov	r3, r0
 800021a:	2b00      	cmp	r3, #0
 800021c:	d10b      	bne.n	8000236 <main+0x32>
	    {

           MCAL_GPIO_toggle_pin(GPIOB, GPIO_PIN_1); // Toggle LED
 800021e:	2102      	movs	r1, #2
 8000220:	480d      	ldr	r0, [pc, #52]	; (8000258 <main+0x54>)
 8000222:	f000 f993 	bl	800054c <MCAL_GPIO_toggle_pin>
	       while ((MCAL_GPIO_Read_pin(GPIOA, GPIO_PIN_1))==0);
 8000226:	bf00      	nop
 8000228:	2102      	movs	r1, #2
 800022a:	480a      	ldr	r0, [pc, #40]	; (8000254 <main+0x50>)
 800022c:	f000 f977 	bl	800051e <MCAL_GPIO_Read_pin>
 8000230:	4603      	mov	r3, r0
 8000232:	2b00      	cmp	r3, #0
 8000234:	d0f8      	beq.n	8000228 <main+0x24>
	    }


	    // PA13 Button (Pull-down) >> Toggle LED on Press

	    if ((MCAL_GPIO_Read_pin(GPIOA, GPIO_PIN_13)) == 1) // Button A13 is pressed
 8000236:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800023a:	4806      	ldr	r0, [pc, #24]	; (8000254 <main+0x50>)
 800023c:	f000 f96f 	bl	800051e <MCAL_GPIO_Read_pin>
 8000240:	4603      	mov	r3, r0
 8000242:	2b01      	cmp	r3, #1
 8000244:	d1e4      	bne.n	8000210 <main+0xc>

	    {
	    	 MCAL_GPIO_toggle_pin(GPIOB, GPIO_PIN_13); // Toggle LED
 8000246:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800024a:	4803      	ldr	r0, [pc, #12]	; (8000258 <main+0x54>)
 800024c:	f000 f97e 	bl	800054c <MCAL_GPIO_toggle_pin>
	    if ((MCAL_GPIO_Read_pin(GPIOA, GPIO_PIN_1)==0 )) // Button A1 is pressed
 8000250:	e7de      	b.n	8000210 <main+0xc>
 8000252:	bf00      	nop
 8000254:	40010800 	.word	0x40010800
 8000258:	40010c00 	.word	0x40010c00

0800025c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800025c:	480d      	ldr	r0, [pc, #52]	; (8000294 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000260:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000264:	480c      	ldr	r0, [pc, #48]	; (8000298 <LoopForever+0x6>)
  ldr r1, =_edata
 8000266:	490d      	ldr	r1, [pc, #52]	; (800029c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000268:	4a0d      	ldr	r2, [pc, #52]	; (80002a0 <LoopForever+0xe>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800026c:	e002      	b.n	8000274 <LoopCopyDataInit>

0800026e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000270:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000272:	3304      	adds	r3, #4

08000274 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000274:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000276:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000278:	d3f9      	bcc.n	800026e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800027a:	4a0a      	ldr	r2, [pc, #40]	; (80002a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800027c:	4c0a      	ldr	r4, [pc, #40]	; (80002a8 <LoopForever+0x16>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000280:	e001      	b.n	8000286 <LoopFillZerobss>

08000282 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000282:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000284:	3204      	adds	r2, #4

08000286 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000286:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000288:	d3fb      	bcc.n	8000282 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800028a:	f000 f971 	bl	8000570 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028e:	f7ff ffb9 	bl	8000204 <main>

08000292 <LoopForever>:

LoopForever:
    b LoopForever
 8000292:	e7fe      	b.n	8000292 <LoopForever>
  ldr   r0, =_estack
 8000294:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000298:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800029c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a0:	080005d8 	.word	0x080005d8
  ldr r2, =_sbss
 80002a4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a8:	2000001c 	.word	0x2000001c

080002ac <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ac:	e7fe      	b.n	80002ac <ADC1_2_IRQHandler>
	...

080002b0 <git_pin_posation>:
 *  Created on: Jul 31, 2023
 *      Author: Ahmed shaban mohamed
 */
#include "stm32f103c6_ gpio_drivers.h"
uint8_t git_pin_posation( uint16_t gpio_pin_number)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	4603      	mov	r3, r0
 80002b8:	80fb      	strh	r3, [r7, #6]
	switch(gpio_pin_number)
 80002ba:	88fb      	ldrh	r3, [r7, #6]
 80002bc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80002c0:	f000 80a5 	beq.w	800040e <git_pin_posation+0x15e>
 80002c4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80002c8:	f300 80a3 	bgt.w	8000412 <git_pin_posation+0x162>
 80002cc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80002d0:	f000 809b 	beq.w	800040a <git_pin_posation+0x15a>
 80002d4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80002d8:	f300 809b 	bgt.w	8000412 <git_pin_posation+0x162>
 80002dc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80002e0:	f000 8091 	beq.w	8000406 <git_pin_posation+0x156>
 80002e4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80002e8:	f300 8093 	bgt.w	8000412 <git_pin_posation+0x162>
 80002ec:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80002f0:	f000 8087 	beq.w	8000402 <git_pin_posation+0x152>
 80002f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80002f8:	f300 808b 	bgt.w	8000412 <git_pin_posation+0x162>
 80002fc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000300:	d07d      	beq.n	80003fe <git_pin_posation+0x14e>
 8000302:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000306:	f300 8084 	bgt.w	8000412 <git_pin_posation+0x162>
 800030a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800030e:	d074      	beq.n	80003fa <git_pin_posation+0x14a>
 8000310:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000314:	dc7d      	bgt.n	8000412 <git_pin_posation+0x162>
 8000316:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800031a:	d06c      	beq.n	80003f6 <git_pin_posation+0x146>
 800031c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000320:	dc77      	bgt.n	8000412 <git_pin_posation+0x162>
 8000322:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000326:	d064      	beq.n	80003f2 <git_pin_posation+0x142>
 8000328:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800032c:	dc71      	bgt.n	8000412 <git_pin_posation+0x162>
 800032e:	2b80      	cmp	r3, #128	; 0x80
 8000330:	d05d      	beq.n	80003ee <git_pin_posation+0x13e>
 8000332:	2b80      	cmp	r3, #128	; 0x80
 8000334:	dc6d      	bgt.n	8000412 <git_pin_posation+0x162>
 8000336:	2b20      	cmp	r3, #32
 8000338:	dc48      	bgt.n	80003cc <git_pin_posation+0x11c>
 800033a:	2b00      	cmp	r3, #0
 800033c:	dd69      	ble.n	8000412 <git_pin_posation+0x162>
 800033e:	3b01      	subs	r3, #1
 8000340:	2b1f      	cmp	r3, #31
 8000342:	d866      	bhi.n	8000412 <git_pin_posation+0x162>
 8000344:	a201      	add	r2, pc, #4	; (adr r2, 800034c <git_pin_posation+0x9c>)
 8000346:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800034a:	bf00      	nop
 800034c:	080003d3 	.word	0x080003d3
 8000350:	080003d7 	.word	0x080003d7
 8000354:	08000413 	.word	0x08000413
 8000358:	080003db 	.word	0x080003db
 800035c:	08000413 	.word	0x08000413
 8000360:	08000413 	.word	0x08000413
 8000364:	08000413 	.word	0x08000413
 8000368:	080003df 	.word	0x080003df
 800036c:	08000413 	.word	0x08000413
 8000370:	08000413 	.word	0x08000413
 8000374:	08000413 	.word	0x08000413
 8000378:	08000413 	.word	0x08000413
 800037c:	08000413 	.word	0x08000413
 8000380:	08000413 	.word	0x08000413
 8000384:	08000413 	.word	0x08000413
 8000388:	080003e3 	.word	0x080003e3
 800038c:	08000413 	.word	0x08000413
 8000390:	08000413 	.word	0x08000413
 8000394:	08000413 	.word	0x08000413
 8000398:	08000413 	.word	0x08000413
 800039c:	08000413 	.word	0x08000413
 80003a0:	08000413 	.word	0x08000413
 80003a4:	08000413 	.word	0x08000413
 80003a8:	08000413 	.word	0x08000413
 80003ac:	08000413 	.word	0x08000413
 80003b0:	08000413 	.word	0x08000413
 80003b4:	08000413 	.word	0x08000413
 80003b8:	08000413 	.word	0x08000413
 80003bc:	08000413 	.word	0x08000413
 80003c0:	08000413 	.word	0x08000413
 80003c4:	08000413 	.word	0x08000413
 80003c8:	080003e7 	.word	0x080003e7
 80003cc:	2b40      	cmp	r3, #64	; 0x40
 80003ce:	d00c      	beq.n	80003ea <git_pin_posation+0x13a>

	case GPIO_PIN_15 :
		return 28;
		break;
	default :
		break ;
 80003d0:	e01f      	b.n	8000412 <git_pin_posation+0x162>
		return 0;
 80003d2:	2300      	movs	r3, #0
 80003d4:	e01e      	b.n	8000414 <git_pin_posation+0x164>
		return 4;
 80003d6:	2304      	movs	r3, #4
 80003d8:	e01c      	b.n	8000414 <git_pin_posation+0x164>
		return 8;
 80003da:	2308      	movs	r3, #8
 80003dc:	e01a      	b.n	8000414 <git_pin_posation+0x164>
		return 12;
 80003de:	230c      	movs	r3, #12
 80003e0:	e018      	b.n	8000414 <git_pin_posation+0x164>
		return 16;
 80003e2:	2310      	movs	r3, #16
 80003e4:	e016      	b.n	8000414 <git_pin_posation+0x164>
		return 20;
 80003e6:	2314      	movs	r3, #20
 80003e8:	e014      	b.n	8000414 <git_pin_posation+0x164>
		return 24;
 80003ea:	2318      	movs	r3, #24
 80003ec:	e012      	b.n	8000414 <git_pin_posation+0x164>
		return 28;
 80003ee:	231c      	movs	r3, #28
 80003f0:	e010      	b.n	8000414 <git_pin_posation+0x164>
		return 0;
 80003f2:	2300      	movs	r3, #0
 80003f4:	e00e      	b.n	8000414 <git_pin_posation+0x164>
		return 4;
 80003f6:	2304      	movs	r3, #4
 80003f8:	e00c      	b.n	8000414 <git_pin_posation+0x164>
		return 8;
 80003fa:	2308      	movs	r3, #8
 80003fc:	e00a      	b.n	8000414 <git_pin_posation+0x164>
		return 12;
 80003fe:	230c      	movs	r3, #12
 8000400:	e008      	b.n	8000414 <git_pin_posation+0x164>
		return 16;
 8000402:	2310      	movs	r3, #16
 8000404:	e006      	b.n	8000414 <git_pin_posation+0x164>
		return 20;
 8000406:	2314      	movs	r3, #20
 8000408:	e004      	b.n	8000414 <git_pin_posation+0x164>
		return 24;
 800040a:	2318      	movs	r3, #24
 800040c:	e002      	b.n	8000414 <git_pin_posation+0x164>
		return 28;
 800040e:	231c      	movs	r3, #28
 8000410:	e000      	b.n	8000414 <git_pin_posation+0x164>
		break ;
 8000412:	bf00      	nop

	}

}
 8000414:	4618      	mov	r0, r3
 8000416:	370c      	adds	r7, #12
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop

08000420 <MCAL_GPIO_INIT>:
 * @retval               - null
 * Note                  -in STM32F103c6 mcu has gpio port A B C D but LQFP48 package hava only A and B and part OF C and  D
 */

void MCAL_GPIO_INIT(GPIO_typedef *GPIOX ,GPIO_pinconfig_t *pinconfig)
{
 8000420:	b590      	push	{r4, r7, lr}
 8000422:	b085      	sub	sp, #20
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
 8000428:	6039      	str	r1, [r7, #0]
	//port configur register low (GPIO_CRL) configure  pins from 0 ti 7
	//port configur register high (GPIO_CRH) configure  pins from 8 ti 15
	volatile uint32_t *configregister =NULL;
 800042a:	2300      	movs	r3, #0
 800042c:	60bb      	str	r3, [r7, #8]
	uint8_t config=0;
 800042e:	2300      	movs	r3, #0
 8000430:	73fb      	strb	r3, [r7, #15]
	configregister=(pinconfig->gpio_pin_number<GPIO_PIN_8)? &GPIOX->CRL : &GPIOX->CRH  ;
 8000432:	683b      	ldr	r3, [r7, #0]
 8000434:	881b      	ldrh	r3, [r3, #0]
 8000436:	2bff      	cmp	r3, #255	; 0xff
 8000438:	d801      	bhi.n	800043e <MCAL_GPIO_INIT+0x1e>
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	e001      	b.n	8000442 <MCAL_GPIO_INIT+0x22>
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	3304      	adds	r3, #4
 8000442:	60bb      	str	r3, [r7, #8]
	//clear CNFy[1:0] and  	M0DE y[1:0]
	(*configregister) &= ~(0xf<<git_pin_posation(pinconfig->gpio_pin_number));
 8000444:	683b      	ldr	r3, [r7, #0]
 8000446:	881b      	ldrh	r3, [r3, #0]
 8000448:	4618      	mov	r0, r3
 800044a:	f7ff ff31 	bl	80002b0 <git_pin_posation>
 800044e:	4603      	mov	r3, r0
 8000450:	461a      	mov	r2, r3
 8000452:	230f      	movs	r3, #15
 8000454:	4093      	lsls	r3, r2
 8000456:	43da      	mvns	r2, r3
 8000458:	68bb      	ldr	r3, [r7, #8]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	401a      	ands	r2, r3
 800045e:	68bb      	ldr	r3, [r7, #8]
 8000460:	601a      	str	r2, [r3, #0]
	// if pin is output
	if(  (pinconfig->GPIO_MODE==GPIO_MODE_OUTPUT_PP) ||(pinconfig->GPIO_MODE==GPIO_MODE_OUTPUT_OD)||(pinconfig->GPIO_MODE==GPIO_MODE_OUTPUT_AF_PP)||(pinconfig->GPIO_MODE==GPIO_MODE_OUTPUT_AF_OD ))
 8000462:	683b      	ldr	r3, [r7, #0]
 8000464:	789b      	ldrb	r3, [r3, #2]
 8000466:	2b04      	cmp	r3, #4
 8000468:	d00b      	beq.n	8000482 <MCAL_GPIO_INIT+0x62>
 800046a:	683b      	ldr	r3, [r7, #0]
 800046c:	789b      	ldrb	r3, [r3, #2]
 800046e:	2b05      	cmp	r3, #5
 8000470:	d007      	beq.n	8000482 <MCAL_GPIO_INIT+0x62>
 8000472:	683b      	ldr	r3, [r7, #0]
 8000474:	789b      	ldrb	r3, [r3, #2]
 8000476:	2b06      	cmp	r3, #6
 8000478:	d003      	beq.n	8000482 <MCAL_GPIO_INIT+0x62>
 800047a:	683b      	ldr	r3, [r7, #0]
 800047c:	789b      	ldrb	r3, [r3, #2]
 800047e:	2b07      	cmp	r3, #7
 8000480:	d10e      	bne.n	80004a0 <MCAL_GPIO_INIT+0x80>
	{
		//set CNFy[1:0] and M0DE y[1:0]
		config=((((pinconfig->GPIO_MODE -4)<<2)|(pinconfig->GPIO_OUTPUT_SPEED))&0x0f) ;
 8000482:	683b      	ldr	r3, [r7, #0]
 8000484:	789b      	ldrb	r3, [r3, #2]
 8000486:	3b04      	subs	r3, #4
 8000488:	009b      	lsls	r3, r3, #2
 800048a:	b25a      	sxtb	r2, r3
 800048c:	683b      	ldr	r3, [r7, #0]
 800048e:	78db      	ldrb	r3, [r3, #3]
 8000490:	b25b      	sxtb	r3, r3
 8000492:	4313      	orrs	r3, r2
 8000494:	b25b      	sxtb	r3, r3
 8000496:	b2db      	uxtb	r3, r3
 8000498:	f003 030f 	and.w	r3, r3, #15
 800049c:	73fb      	strb	r3, [r7, #15]
 800049e:	e02c      	b.n	80004fa <MCAL_GPIO_INIT+0xda>
		//(*configregister)|=((config)<<git_pin_posation(pinconfig->gpio_pin_number));

	}
	else
	{
		if(  (pinconfig->GPIO_MODE==GPIO_MODE_Analog) ||(pinconfig->GPIO_MODE==GPIO_MODE_INPUT_FLO))
 80004a0:	683b      	ldr	r3, [r7, #0]
 80004a2:	789b      	ldrb	r3, [r3, #2]
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d003      	beq.n	80004b0 <MCAL_GPIO_INIT+0x90>
 80004a8:	683b      	ldr	r3, [r7, #0]
 80004aa:	789b      	ldrb	r3, [r3, #2]
 80004ac:	2b01      	cmp	r3, #1
 80004ae:	d107      	bne.n	80004c0 <MCAL_GPIO_INIT+0xa0>
		{
			//set CNFy[1:0] and M0DE y[1:0]
			config=((((pinconfig->GPIO_MODE )<<2)|0x0)&0x0f) ;
 80004b0:	683b      	ldr	r3, [r7, #0]
 80004b2:	789b      	ldrb	r3, [r3, #2]
 80004b4:	009b      	lsls	r3, r3, #2
 80004b6:	b2db      	uxtb	r3, r3
 80004b8:	f003 030f 	and.w	r3, r3, #15
 80004bc:	73fb      	strb	r3, [r7, #15]
 80004be:	e01c      	b.n	80004fa <MCAL_GPIO_INIT+0xda>
			//	(*configregister)|=((config)<<git_pin_posation(pinconfig->gpio_pin_number));

		}
		else if  (pinconfig->GPIO_MODE==GPIO_MODE_INPUT_AF )
 80004c0:	683b      	ldr	r3, [r7, #0]
 80004c2:	789b      	ldrb	r3, [r3, #2]
 80004c4:	2b08      	cmp	r3, #8
 80004c6:	d102      	bne.n	80004ce <MCAL_GPIO_INIT+0xae>
		{
			config=(((GPIO_MODE_INPUT_AF<<2)|0x0)&0x0f);
 80004c8:	2300      	movs	r3, #0
 80004ca:	73fb      	strb	r3, [r7, #15]
 80004cc:	e015      	b.n	80004fa <MCAL_GPIO_INIT+0xda>
			//(*configregister)|=((config)<<git_pin_posation(pinconfig->gpio_pin_number));

		}
		else
		{
			config=((((GPIO_MODE_INPUT_PU)<<2)|0x0)&0x0f);
 80004ce:	2308      	movs	r3, #8
 80004d0:	73fb      	strb	r3, [r7, #15]
			if(pinconfig->GPIO_MODE==GPIO_MODE_INPUT_PU)
 80004d2:	683b      	ldr	r3, [r7, #0]
 80004d4:	789b      	ldrb	r3, [r3, #2]
 80004d6:	2b02      	cmp	r3, #2
 80004d8:	d107      	bne.n	80004ea <MCAL_GPIO_INIT+0xca>
			{
				GPIOX->ODR |= pinconfig->gpio_pin_number;
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	68db      	ldr	r3, [r3, #12]
 80004de:	683a      	ldr	r2, [r7, #0]
 80004e0:	8812      	ldrh	r2, [r2, #0]
 80004e2:	431a      	orrs	r2, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	60da      	str	r2, [r3, #12]
 80004e8:	e007      	b.n	80004fa <MCAL_GPIO_INIT+0xda>
			}
			else
			{
				GPIOX->ODR &=~( pinconfig->gpio_pin_number);
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	68db      	ldr	r3, [r3, #12]
 80004ee:	683a      	ldr	r2, [r7, #0]
 80004f0:	8812      	ldrh	r2, [r2, #0]
 80004f2:	43d2      	mvns	r2, r2
 80004f4:	401a      	ands	r2, r3
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	60da      	str	r2, [r3, #12]

			}
		}
	}
	//write or read to CL or CRH
	(*configregister)|=((config)<<git_pin_posation(pinconfig->gpio_pin_number));
 80004fa:	7bfc      	ldrb	r4, [r7, #15]
 80004fc:	683b      	ldr	r3, [r7, #0]
 80004fe:	881b      	ldrh	r3, [r3, #0]
 8000500:	4618      	mov	r0, r3
 8000502:	f7ff fed5 	bl	80002b0 <git_pin_posation>
 8000506:	4603      	mov	r3, r0
 8000508:	fa04 f203 	lsl.w	r2, r4, r3
 800050c:	68bb      	ldr	r3, [r7, #8]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	431a      	orrs	r2, r3
 8000512:	68bb      	ldr	r3, [r7, #8]
 8000514:	601a      	str	r2, [r3, #0]
}
 8000516:	bf00      	nop
 8000518:	3714      	adds	r7, #20
 800051a:	46bd      	mov	sp, r7
 800051c:	bd90      	pop	{r4, r7, pc}

0800051e <MCAL_GPIO_Read_pin>:
 *@param [in]            -gpio_pin_number specifies the port bit to read  set by @ ref GPIO_PIN_defin
 * @retval               - the input pin value
 * Note                  - null
 * */
uint8_t MCAL_GPIO_Read_pin(GPIO_typedef *GPIOX,uint16_t gpio_pin_number)
{
 800051e:	b480      	push	{r7}
 8000520:	b085      	sub	sp, #20
 8000522:	af00      	add	r7, sp, #0
 8000524:	6078      	str	r0, [r7, #4]
 8000526:	460b      	mov	r3, r1
 8000528:	807b      	strh	r3, [r7, #2]
	uint8_t pin_status;
	if(((GPIOX->IDR) & gpio_pin_number)!=(uint8_t) GPIO_pin_reset)
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	689a      	ldr	r2, [r3, #8]
 800052e:	887b      	ldrh	r3, [r7, #2]
 8000530:	4013      	ands	r3, r2
 8000532:	2b00      	cmp	r3, #0
 8000534:	d002      	beq.n	800053c <MCAL_GPIO_Read_pin+0x1e>
	{
		pin_status =GPIO_pin_set;
 8000536:	2301      	movs	r3, #1
 8000538:	73fb      	strb	r3, [r7, #15]
 800053a:	e001      	b.n	8000540 <MCAL_GPIO_Read_pin+0x22>
	}
	else
	{
		pin_status =GPIO_pin_reset;
 800053c:	2300      	movs	r3, #0
 800053e:	73fb      	strb	r3, [r7, #15]
	}
	return  pin_status;
 8000540:	7bfb      	ldrb	r3, [r7, #15]

}
 8000542:	4618      	mov	r0, r3
 8000544:	3714      	adds	r7, #20
 8000546:	46bd      	mov	sp, r7
 8000548:	bc80      	pop	{r7}
 800054a:	4770      	bx	lr

0800054c <MCAL_GPIO_toggle_pin>:
 * @param [in]           - gpio_pin_number specifies the port bit to read  set by @ ref GPIO_PIN_defin
 * @retval               - null
 * Note                  - null
 * */
void MCAL_GPIO_toggle_pin(GPIO_typedef *GPIOX,uint16_t gpio_pin_number)
{
 800054c:	b480      	push	{r7}
 800054e:	b083      	sub	sp, #12
 8000550:	af00      	add	r7, sp, #0
 8000552:	6078      	str	r0, [r7, #4]
 8000554:	460b      	mov	r3, r1
 8000556:	807b      	strh	r3, [r7, #2]

	GPIOX->ODR ^=gpio_pin_number;
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	68da      	ldr	r2, [r3, #12]
 800055c:	887b      	ldrh	r3, [r7, #2]
 800055e:	405a      	eors	r2, r3
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	60da      	str	r2, [r3, #12]
}
 8000564:	bf00      	nop
 8000566:	370c      	adds	r7, #12
 8000568:	46bd      	mov	sp, r7
 800056a:	bc80      	pop	{r7}
 800056c:	4770      	bx	lr
	...

08000570 <__libc_init_array>:
 8000570:	b570      	push	{r4, r5, r6, lr}
 8000572:	2600      	movs	r6, #0
 8000574:	4d0c      	ldr	r5, [pc, #48]	; (80005a8 <__libc_init_array+0x38>)
 8000576:	4c0d      	ldr	r4, [pc, #52]	; (80005ac <__libc_init_array+0x3c>)
 8000578:	1b64      	subs	r4, r4, r5
 800057a:	10a4      	asrs	r4, r4, #2
 800057c:	42a6      	cmp	r6, r4
 800057e:	d109      	bne.n	8000594 <__libc_init_array+0x24>
 8000580:	f000 f81a 	bl	80005b8 <_init>
 8000584:	2600      	movs	r6, #0
 8000586:	4d0a      	ldr	r5, [pc, #40]	; (80005b0 <__libc_init_array+0x40>)
 8000588:	4c0a      	ldr	r4, [pc, #40]	; (80005b4 <__libc_init_array+0x44>)
 800058a:	1b64      	subs	r4, r4, r5
 800058c:	10a4      	asrs	r4, r4, #2
 800058e:	42a6      	cmp	r6, r4
 8000590:	d105      	bne.n	800059e <__libc_init_array+0x2e>
 8000592:	bd70      	pop	{r4, r5, r6, pc}
 8000594:	f855 3b04 	ldr.w	r3, [r5], #4
 8000598:	4798      	blx	r3
 800059a:	3601      	adds	r6, #1
 800059c:	e7ee      	b.n	800057c <__libc_init_array+0xc>
 800059e:	f855 3b04 	ldr.w	r3, [r5], #4
 80005a2:	4798      	blx	r3
 80005a4:	3601      	adds	r6, #1
 80005a6:	e7f2      	b.n	800058e <__libc_init_array+0x1e>
 80005a8:	080005d0 	.word	0x080005d0
 80005ac:	080005d0 	.word	0x080005d0
 80005b0:	080005d0 	.word	0x080005d0
 80005b4:	080005d4 	.word	0x080005d4

080005b8 <_init>:
 80005b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ba:	bf00      	nop
 80005bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005be:	bc08      	pop	{r3}
 80005c0:	469e      	mov	lr, r3
 80005c2:	4770      	bx	lr

080005c4 <_fini>:
 80005c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005c6:	bf00      	nop
 80005c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ca:	bc08      	pop	{r3}
 80005cc:	469e      	mov	lr, r3
 80005ce:	4770      	bx	lr
